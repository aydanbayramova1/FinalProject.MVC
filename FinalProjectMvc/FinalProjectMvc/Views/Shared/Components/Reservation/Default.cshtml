@using FinalProjectMvc.ViewModels.Admin.Reservation
@model ReservationCreateVM

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Georgia', serif;
        background: linear-gradient(135deg, #121d23);
        min-height: 100vh;
        color: #121d23;
    }

    #reservation-section {
        padding: 40px 20px;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .reservation-container {
        max-width: 800px;
        width: 100%;
        background: #121D23;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        overflow: hidden;
        backdrop-filter: blur(10px);
    }

    .header {
        background: rgba(0, 0, 0, 0.2);
        padding: 40px;
        text-align: center;
        color: #f5f5dc;
    }

    .main-title {
        font-size: 3.5rem;
        font-weight: bold;
        letter-spacing: 4px;
        margin-bottom: 10px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .subtitle {
        font-size: 1.3rem;
        margin-bottom: 20px;
        opacity: 0.9;
    }

    .schedule-info {
        background: rgba(0, 0, 0, 0.2);
        padding: 20px;
        border-radius: 10px;
        margin-top: 20px;
    }

        .schedule-info p {
            margin: 5px 0;
            font-size: 1.1rem;
        }

    .reservation-form {
        padding: 40px;
        color: #121d23;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 25px;
        margin-bottom: 30px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

    label {
        font-weight: bold;
        margin-bottom: 8px;
        color: #C9A581;
        font-size: 1.1rem;
    }

    input, select, textarea {
        padding: 15px;
        border: 2px solid #bdc3c7;
        border-radius: 10px;
        font-size: 1rem;
        background: rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
    }

        input:focus, select:focus, textarea:focus {
            outline: none;
            border-color: #FFFFFF;
            box-shadow: 0 0 10px rgba(52, 73, 94, 0.2);
            transform: translateY(-2px);
        }

    .time-range {
        display: grid;
        grid-template-columns: 1fr auto 1fr;
        gap: 10px;
        align-items: center;
    }

    .time-separator {
        text-align: center;
        font-weight: bold;
        color: #2c3e50;
        font-size: 1.2rem;
    }

    .table-selection {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 15px;
        margin-top: 15px;
    }

    .table-option {
        position: relative;
        cursor: pointer;
    }

        .table-option input[type="radio"] {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    .table-card {
        padding: 20px;
        border: 2px solid #bdc3c7;
        border-radius: 15px;
        text-align: center;
        background: #ffffff;
        transition: all 0.3s ease;
        min-height: 100px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .table-option input[type="radio"]:checked + .table-card {
        border-color: #2c3e50;
        background: #121D23;
        transform: scale(1.05);
        box-shadow: 0 5px 15px rgba(52, 73, 94, 0.2);
    }

        .table-option input[type="radio"]:checked + .table-card .table-name,
        .table-option input[type="radio"]:checked + .table-card .table-capacity {
            color: #f5f5dc;
        }

    .table-name {
        font-weight: bold;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .table-capacity {
        color: #666;
        font-size: 0.9rem;
    }

    .submit-button {
        background: #C9A581;
        color: #121d23;
        padding: 18px 40px;
        border: none;
        border-radius: 15px;
        font-size: 1.2rem;
        font-weight: bold;
        cursor: pointer;
        width: 100%;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

        .submit-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(52, 73, 94, 0.3);
        }

        .submit-button:active {
            transform: translateY(0);
        }

    media (max-width: 768px) {
        .form-grid

    {
        grid-template-columns: 1fr;
    }

    .main-title {
        font-size: 2.5rem;
    }

    .table-selection {
        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    }

    }

    .alert {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: linear-gradient(135deg, #34495e 0%, #2c3e50 100%);
        color: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        text-align: center;
        min-width: 300px;
        display: none;
    }

        .alert h3 {
            margin-bottom: 15px;
            font-size: 1.5rem;
        }

        .alert p {
            margin-bottom: 20px;
            line-height: 1.6;
        }

        .alert button {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 2px solid white;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
        }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 999;
        display: none;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.6);
        z-index: 1000;
        display: none;
    }

    .alert {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fdfdfd;
        color: #333;
        padding: 30px;
        border-radius: 20px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        z-index: 1001;
        width: 90%;
        max-width: 400px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        display: none;
        animation: fadeIn 0.3s ease-in-out;
        border: 1px dashed #ccc;
        background-image: linear-gradient(to bottom, #fff 0%, #f5f5f5 100%);
    }

        .alert h3 {
            font-size: 22px;
            margin-bottom: 15px;
            color: #121D23;
        }

        .alert p {
            font-size: 16px;
            margin-bottom: 20px;
        }

        .alert button {
            background-color: #121D23 color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .alert button:hover {
                background-color: #121D23;
            }

    keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translate(-50%, -60%);
    }

    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }

    }

    .text-danger {
        color: #e74c3c;
        font-size: 0.9rem;
        margin-top: 4px;
        display: block;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .time-range input {
        width: 100%;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    /* Overlay stili */
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.6);
        z-index: 999;
        display: none;
    }

    .alert-box {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fff;
        padding: 40px;
        width: 90%;
        max-width: 600px;
        min-height: 60px; 
        border-radius: 16px;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        display: none;
        text-align: center;
        animation: fadeIn 0.3s ease;
    }

        .alert-box h3 {
            font-size: 26px;
            color: #28a745;
            margin-bottom: 20px;
        }

    .details p {
        font-size: 18px;
        margin: 6px 0;
    }

    .warning {
        margin-top: 20px;
        color: red;
        font-weight: bold;
        font-size: 16px;
    }

    .buttons {
        margin-top: 30px;
        display: flex;
        justify-content: center;
        flex-direction: column;
        gap: 10px;
    }

    .alert-box button {
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        background: #eee;
        border-radius: 8px;
        cursor: pointer;
    }

    .whatsapp-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        text-decoration: none;
        background-color: #25D366;
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: bold;
        font-size: 16px;
        transition: background 0.3s ease;
    }

        .whatsapp-btn:hover {
            background-color: #1ebd59;
        }


        .alert-box h3 {
            font-size: 24px;
            margin-bottom: 16px;
            color: #28a745;
        }

     
        .alert-box p {
            font-size: 18px;
            color: #333;
            margin-bottom: 24px;
        }

        .alert-box button {
            padding: 10px 24px;
            background-color: #f1f1f1;
            color: #000;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.3s ease;
        }

            .alert-box button:hover {
                background-color: #ddd;
            }

    keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translate(-50%, -60%);
    }

    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }

    }
</style>
        <section id="reservation-section">
            <div class="reservation-container">
                <div class="header">
                    <h1 class="main-title">CAFFE LUNA</h1>
                    <p class="subtitle">Make Your Reservation</p>
                    <div class="schedule-info">
                        @foreach (var item in Model.OpeningHours)
                        {
                            <p><strong>Opening Hours:</strong></p>
                            <p>Weekdays: @item.DayRange</p>
                            <p>Weekend:  @item.TimeRange</p>
                        }
                    </div>
                </div>

                <div class="reservation-form">
                    <form id="reservationForm" method="post">
                        @Html.AntiForgeryToken()

                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <div class="form-grid">
                            <div class="form-group">
                                <label asp-for="Fullname">Full Name *</label>
                                <input asp-for="Fullname" class="form-control" required />
                                <span asp-validation-for="Fullname" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Email">Email Address *</label>
                                <input asp-for="Email" type="email" class="form-control" required />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Phone">Phone Number *</label>
                                <input asp-for="Phone" class="form-control" required />
                                <span asp-validation-for="Phone" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Date">Reservation Date *</label>
                                <input asp-for="Date" type="date" class="form-control" required min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                                <span asp-validation-for="Date" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label>Time Range *</label>
                                <div class="time-range d-flex gap-2">
                                    <input asp-for="TimeFrom" type="time" class="form-control" required />
                                    <span class="align-self-center">to</span>
                                    <input asp-for="TimeTo" type="time" class="form-control" required />
                                </div>
                                <span asp-validation-for="TimeFrom" class="text-danger"></span>
                                <span asp-validation-for="TimeTo" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Guests">Number of Guests *</label>
                                <input asp-for="Guests" type="number" min="1" max="100" class="form-control" required />
                                <span asp-validation-for="Guests" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group full-width mt-3">
                            <label>Select Table *</label>
                            <div class="table-selection">
                                @foreach (var table in Model.Tables)
                                {
                                    var inputId = $"table{table.Id}";
                                    <div class="table-option mb-2">
                                        <input type="radio" id="@inputId" name="TableId" value="@table.Id" required />
                                        <label for="@inputId" class="table-card d-block p-2 border rounded cursor-pointer">
                                            <div class="table-name">Table @table.Number</div>
                                            <div class="table-capacity">@table.Capacity people — @table.Location</div>
                                        </label>
                                    </div>
                                }
                                <span asp-validation-for="TableId" class="text-danger"></span>
                            </div>
                        </div>

                        <button type="submit" class="submit-button btn btn-primary mt-3">Complete Reservation</button>
                        <span id="reservationError" style="color: red; font-weight: 600; display: none; margin-top: 10px;"></span>
                    </form>
                </div>
            </div>
        </section>
        <div class="overlay" id="overlay"></div>
        <div class="alert-box" id="alertBox">
            <h3>✅ Reservation Confirmed!</h3>
            <p id="reservationDetails">
                Your reservation details have been successfully registered. Thank you for choosing us!
            </p>
            <p class="warning">❗If you will not be able to come, please let us know in advance.</p>

            <div class="buttons">
                <button onclick="closeAlert()">Close</button>
                <a href="https://wa.me/PHONE_NUMBER?text=Hello!%20Welcome%20to%20our%20Coffee%20Shop%20☕%20How%20can%20we%20help%20you%3F"
                   target="_blank" class="whatsapp-btn">
                    <img src="https://img.icons8.com/color/48/000000/whatsapp--v1.png" alt="WhatsApp" />
                    Contact via WhatsApp
                </a>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdn.jsdelivr.net/npm/qrcode/build/qrcode.min.js"></script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const form = document.getElementById('reservationForm');
                const dateInput = form.querySelector('input[name="Date"]');
                const timeFromInput = form.querySelector('input[name="TimeFrom"]');
                const timeToInput = form.querySelector('input[name="TimeTo"]');
                const guestsInput = form.querySelector('input[name="Guests"]');
                const tableOptions = document.querySelectorAll('.table-option');
                const errorSpan = document.getElementById('reservationError');

                const overlay = document.getElementById('overlay');
                const alertBox = document.getElementById('alertBox');
                const reservationDetails = document.getElementById('reservationDetails');

                const today = new Date();
                const todayStr = today.toISOString().split('T')[0];
                dateInput.setAttribute('min', todayStr);

                function setTimeLimits() {
                    if (!dateInput.value) return;

                    const selectedDate = new Date(dateInput.value);
                    const now = new Date();
                    const day = selectedDate.getDay();

                    let minTime = "09:00";
                    let maxTime = (day === 0 || day === 6) ? "22:30" : "21:00";

                    if (selectedDate.toDateString() === now.toDateString()) {
                        let minHour = now.getHours() + 1;
                        let minMinute = 0;

                        minTime = `${minHour.toString().padStart(2, '0')}:${minMinute.toString().padStart(2, '0')}`;

                        if (minTime > maxTime) {
                            timeFromInput.value = "";
                            timeToInput.value = "";
                            timeFromInput.disabled = true;
                            timeToInput.disabled = true;

                            errorSpan.textContent = "Bu gün üçün rezervasiya mümkün deyil.";
                            errorSpan.style.display = 'block';
                            return;
                        } else {
                            timeFromInput.disabled = false;
                            timeToInput.disabled = false;
                            errorSpan.style.display = 'none';
                        }
                    } else {
                        timeFromInput.disabled = false;
                        timeToInput.disabled = false;
                        errorSpan.style.display = 'none';
                    }

                    timeFromInput.min = minTime;
                    timeFromInput.max = maxTime;
                    timeToInput.min = minTime;
                    timeToInput.max = maxTime;

                    if (timeFromInput.value < minTime) timeFromInput.value = minTime;
                    if (timeToInput.value < minTime) timeToInput.value = minTime;
                }

                function filterTables() {
                    const guestsCount = parseInt(guestsInput.value, 10);

                    if (isNaN(guestsCount) || guestsCount < 1) {
                        tableOptions.forEach(option => {
                            option.style.display = 'block';
                            option.querySelector('input[type=radio]').disabled = false;
                        });
                        return;
                    }

                    const tableCapacityRules = {
                        2: [1, 2],      
                        4: [3, 4],      
                        6: [5, 6],    
                        8: [7, 8],    
                        10: [9, 10],   
                        12: [11, 12], 
                        15: [13, 14, 15]
                    };

                    tableOptions.forEach(option => {
                        const capacityText = option.querySelector('.table-capacity').innerText;
                        const match = capacityText.match(/^(\d+)/);
                        let capacity = match ? parseInt(match[1], 10) : null;

                        if (capacity !== null && tableCapacityRules[capacity]) {
                            if (tableCapacityRules[capacity].includes(guestsCount)) {
                                option.style.display = 'block';
                                option.querySelector('input[type=radio]').disabled = false;
                            } else {
                                option.style.display = 'none';
                                option.querySelector('input[type=radio]').disabled = true;

                                if (option.querySelector('input[type=radio]').checked) {
                                    option.querySelector('input[type=radio]').checked = false;
                                }
                            }
                        } else {
                            option.style.display = 'none';
                            option.querySelector('input[type=radio]').disabled = true;

                            if (option.querySelector('input[type=radio]').checked) {
                                option.querySelector('input[type=radio]').checked = false;
                            }
                        }
                    });
                }

                dateInput.addEventListener('change', setTimeLimits);
                guestsInput.addEventListener('input', filterTables);
                setTimeLimits();
                filterTables();

                form.addEventListener('submit', async function (e) {
                    e.preventDefault();

                    const formData = new FormData(form);
                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                    errorSpan.style.display = 'none';
                    errorSpan.textContent = '';

                    try {
                        const response = await fetch('/Reservation/CreateReservation', {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': token
                            },
                            body: formData
                        });

                        const result = await response.json();

                        if (result.success) {
                            overlay.style.display = 'block';
                            alertBox.style.display = 'block';

                            reservationDetails.innerHTML = `
                                <strong>Name:</strong> ${formData.get("Fullname")}<br>
                                <strong>Date:</strong> ${formData.get("Date")}<br>
                                <strong>Time:</strong> ${formData.get("TimeFrom")} to ${formData.get("TimeTo")}<br>
                                <strong>Guests:</strong> ${formData.get("Guests")}`;

                            form.reset();
                            setTimeLimits();
                            filterTables();
                        } else {
                            errorSpan.textContent = result.message || 'The place is full! The table is already reserved for this date and time..';
                            errorSpan.style.display = 'block';
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        errorSpan.textContent = 'Server xətası baş verdi. Zəhmət olmasa yenidən cəhd edin.';
                        errorSpan.style.display = 'block';
                    }
                });
            });

            function closeAlert() {
                document.getElementById('alertBox').style.display = 'none';
                document.getElementById('overlay').style.display = 'none';
            }
        </script>
