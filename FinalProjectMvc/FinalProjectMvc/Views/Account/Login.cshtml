@model FinalProjectMvc.ViewModels.UI.Account.LoginVM

@{
    Layout = "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <link href="https://fonts.googleapis.com/css?family=Nunito:400,600,700" rel="stylesheet">
    <script src="https://kit.fontawesome.com/897e067933.js" crossorigin="anonymous"></script>

    <style>
        * {
            box-sizing: border-box;
        }

        body {
            font-family: "Nunito", sans-serif;
            margin: 0;
        }

        .container {
            height: 100vh;
            background-image: url('../assets/images/common/coffeshop1234.jpg');
            background-size: 100%;
            background-position: center;
            background-repeat: no-repeat;
        }

        .modal {
            position: fixed;
            left: 0;
            bottom: 0;
            width: 100%;
            height: 60px;
            background: rgba(51, 51, 51, 0.5);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            transition: 0.4s;
        }

            .modal.is-open {
                height: 100%;
                background: rgba(51, 51, 51, 0.85);
            }

        .modal-container {
            display: flex;
            max-width: 720px;
            width: 100%;
            border-radius: 10px;
            overflow: hidden;
            position: absolute;
            opacity: 0;
            pointer-events: none;
            transition: 0.6s;
            background: #fff;
            transform: translateY(100px) scale(0.4);
        }

        .modal.is-open .modal-container {
            opacity: 1;
            pointer-events: auto;
            transform: translateY(0) scale(1);
        }

        .modal-left {
            padding: 60px 30px 20px;
            background: #fff;
            flex: 1.5;
            opacity: 0;
            transform: translateY(80px);
            transition: 0.5s;
        }

        .modal.is-open .modal-left {
            transform: translateY(0);
            opacity: 1;
            transition-delay: 0.1s;
        }

        .modal-right {
            flex: 2;
            font-size: 0;
            overflow: hidden;
            display: block;
        }

            .modal-right img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transform: scale(2);
                transition: 1.2s;
            }

        .modal.is-open .modal-right img {
            transform: scale(1);
        }

        .modal-title {
            font-size: 26px;
            margin: 0;
            font-weight: 400;
            color: #55311c;
        }

        .modal-desc {
            margin: 6px 0 30px 0;
        }

        .input-block {
            display: flex;
            flex-direction: column;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-bottom: 20px;
            position: relative;
        }

            .input-block input {
                border: none;
                outline: none;
                font-size: 14px;
            }

        .text-danger {
            font-size: 13px;
            color: #e74c3c;
            margin-top: 5px;
            display: block;
        }

        .modal-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .modal-buttons a {
                color: #333;
                font-size: 14px;
                cursor: pointer;
                text-decoration: none;
            }

        .input-button {
            padding: 10px 20px;
            background: #8c7569;
            border: none;
            border-radius: 4px;
            color: #fff;
            cursor: pointer;
            transition: 0.3s;
        }

            .input-button:hover {
                background: #55311c;
            }

        .sign-up {
            margin-top: 60px;
            font-size: 14px;
            text-align: center;
        }

            .sign-up a {
                color: #8c7569;
            }

        .modal-button {
            margin-top: 10px;
            color: #8c7569;
            background: #fff;
            padding: 10px 40px;
            border: none;
            border-radius: 30px;
            font-size: 18px;
            cursor: pointer;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.16);
        }

            .modal-button:hover {
                background: #f0f0f0;
            }

        .toggle-password {
            position: absolute;
            top: 50%;
            right: 12px;
            transform: translateY(-50%);
            cursor: pointer;
            color: #8c7569;
            font-size: 16px;
        }

        media(max - width: 750px)

        {
            .modal-container

        {
            flex-direction: column;
            width: 90%;
        }

        .modal-right {
            display: none;
        }

        }
    </style>
</head>
<body>
    <div class="container"></div>

    <div class="modal" id="modal">
        <div class="modal-container">
            <div class="modal-left">
                <form asp-action="Login" asp-controller="Account" method="post">
                    <h1 class="modal-title">Welcome!</h1>
                    <p class="modal-desc">Fuel your day with warmth and flavor.</p>

                    <!-- General error messages here -->
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="input-block">
                        <span asp-validation-for="EmailOrUsername" class="text-danger"></span>
                        <input asp-for="EmailOrUsername" placeholder="Email or username" />
                    </div>

                    <div class="input-block">
                        <span asp-validation-for="Password" class="text-danger"></span>
                        <input asp-for="Password" type="password" placeholder="Password" id="password" style="padding-right: 40px;" />
                        <span class="toggle-password" id="togglePassword"><i class="fas fa-eye"></i></span>
                    </div>

                    <div class="modal-buttons">
                        <a asp-controller="Account" asp-action="ForgotPassword">Forgot your password?</a>
                        <button type="submit" class="input-button">Login</button>
                    </div>

                    <p class="sign-up">Don't have an account? <a href="/Account/Register">Sign up now</a></p>
                </form>

            </div>
            <div class="modal-right">
                <img src="~/assets/images/common/coffeshop.jpg" alt="Coffee shop" />
            </div>

            <button class="icon-button close-button" id="closeModal">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
                    <path d="M 25 3 C 12.9 3 3 12.9 3 25s9.9 22 22 22 22-9.9 22-22S37.1 3 25 3zm-8 13l8 8 8-8 2 2-8 8 8 8-2 2-8-8-8 8-2-2 8-8-8-8 2-2z" />
                </svg>
            </button>
        </div>

        <button class="modal-button" id="openModal">Click here to login</button>
    </div>

    <!-- Validation Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script>

    <script>
        const modal = document.getElementById('modal');
        const openModal = document.getElementById('openModal');
        const closeModal = document.getElementById('closeModal');
        const togglePassword = document.getElementById('togglePassword');
        const passwordInput = document.getElementById('password');

        openModal.addEventListener('click', () => modal.classList.add('is-open'));
        closeModal.addEventListener('click', () => modal.classList.remove('is-open'));

        togglePassword.addEventListener('click', () => {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            togglePassword.innerHTML = type === 'password'
                ? '<i class="fas fa-eye"></i>'
                : '<i class="fas fa-eye-slash"></i>';
        });
    </script>
</body>
</html>
