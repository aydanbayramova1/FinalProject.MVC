@model IEnumerable<FinalProjectMvc.ViewModels.Admin.FaqItem.FaqItemVM>

<form id="antiForgeryForm" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-xl-10">
            <div class="bg-light border rounded shadow-sm p-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2 class="mb-0" style="font-family: 'Georgia', serif; color: #6b4f3b;">📚 FAQ Items</h2>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin")){
                        <a asp-action="Create" class="btn btn-outline-brown" id="addNewFaqLink" style="@(Model.Any() ? "display:none;" : "display:inline-block;")">
                            <i class="fa fa-plus mr-1"></i> Add New FAQ
                        </a>
                    }
                  
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered text-center align-middle bg-white" id="faqTable">
                        <thead>
                            <tr style="background-color: #5c3d2e; color: white;">
                                <th>Question</th>
                                <th>Answer</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr data-id="@item.Id">
                                    <td>@item.Question</td>
                                    <td>@item.Answer</td>
                                    <td>
                                        <div class="d-flex justify-content-center gap-2">
                                            @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                                            {
                                                <a asp-action="Detail" asp-route-id="@item.Id" class="btn btn-info btn-sm" title="View Details">
                                                    <i class="fa-solid fa-circle-info"></i>
                                                </a>
                                            }

                                            @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                                            {
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-dark btn-sm" title="Edit">
                                                    <i class="fa-solid fa-pencil"></i>
                                                </a>
                                            }
                                            @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin"))
                                            {
                                                <button type="button" class="btn btn-danger btn-sm delete-btn" data-id="@item.Id" title="Delete">
                                                    <i class="fas fa-trash-alt"></i>
                                                </button>
                                            }
                                           
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div id="noFaqAlert" class="alert alert-warning text-center mt-4" style="display:@(Model.Any() ? "none" : "block")">
                    No FAQ items have been added yet.
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const deleteButtons = document.querySelectorAll(".delete-btn");
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        const noFaqAlert = document.getElementById("noFaqAlert");
        const addNewFaqLink = document.getElementById("addNewFaqLink");
        const faqTableBody = document.querySelector("#faqTable tbody");

        deleteButtons.forEach(btn => {
            btn.addEventListener("click", function () {
                const id = this.getAttribute("data-id");
                const row = this.closest("tr");

                Swal.fire({
                    title: "Are you sure?",
                    text: "This FAQ item will be permanently deleted!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/Admin/FaqItem/Delete/${id}`, {
                            method: "POST",
                            headers: {
                                'RequestVerificationToken': token,
                                'X-Requested-With': 'XMLHttpRequest',
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ id: id })
                        })
                        .then(response => {
                            if (response.ok) {
                                row.remove();
                                Swal.fire("Deleted!", "The FAQ item has been deleted.", "success");

                                if (faqTableBody.children.length === 0) {
                                    noFaqAlert.style.display = "block";
                                    addNewFaqLink.style.display = "inline-block";
                                }
                            } else {
                                Swal.fire("Error!", "Something went wrong.", "error");
                            }
                        })
                        .catch(() => {
                            Swal.fire("Error!", "Unexpected error occurred.", "error");
                        });
                    }
                });
            });
        });
    });
</script>
