@model FinalProjectMvc.ViewModels.Admin.MenuProduct.MenuProductEditVM

@{
    ViewData["Title"] = "Edit Product";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="bg-white p-4 rounded shadow-sm border">
                <h2 class="mb-4 text-center" style="font-family: 'Georgia', serif; color: #6b4f3b;">✏️ Edit Product</h2>

                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="Id" />

                    <div class="form-group mb-3">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Ingredients" class="form-label"></label>
                        <textarea asp-for="Ingredients" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Ingredients" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Price" class="form-label"></label>
                        <input asp-for="Price" class="form-control" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="CategoryId" class="form-label">Category</label>
                        <select asp-for="CategoryId" class="form-control" asp-items="Model.Categories" id="editCategorySelect">
                            <option disabled value="">-- Select Category --</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3" id="editSizesSection" style="display:none;">
                        <label class="form-label">Sizes</label>
                        @if (Model.Sizes != null)
                        {
                            foreach (var size in Model.Sizes)
                            {
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input"
                                           name="SelectedSizeIds"
                                           id="size_@size.Value"
                                           value="@size.Value"
                                    @(Model.SelectedSizeIds?.Contains(int.Parse(size.Value)) == true ? "checked" : "") />
                                    <label class="form-check-label" for="size_@size.Value">@size.Text</label>
                                </div>
                            }
                        }
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-outline-primary">Save Changes</button>
                        <a asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const categorySelect = document.getElementById('editCategorySelect');
        const sizesSection = document.getElementById('editSizesSection');
        const categoryTypes = @Html.Raw(Json.Serialize(Model.CategoryTypesById ?? new Dictionary<int, string>()));

        function toggleSizes(categoryId) {
            if (categoryTypes[categoryId] === "Drink") {
                sizesSection.style.display = 'block';
            } else {
                sizesSection.style.display = 'none';
            }
        }

        categorySelect.addEventListener('change', function () {
            toggleSizes(this.value);
        });

        if (categorySelect.value) {
            toggleSizes(categorySelect.value);
        }
    });
</script>

