@model ServiceVM

<form id="antiForgeryForm" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<div style="position: relative;">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-xl-10">
                <div class="bg-light border rounded shadow-sm p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="mb-0" style="font-family: 'Georgia', serif; color: #6b4f3b;">☕ Service</h2>
                        @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin"))
                        {
                            <a asp-action="Create" class="btn btn-outline-brown" id="addNewServiceLink" style="@(Model == null ? "display:inline-block;" : "display:none;")">
                                <i class="fa fa-plus mr-1"></i> Add New Service
                            </a>
                        }
                       
                    </div>

                    @if (Model != null)
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered text-center align-middle bg-white" id="serviceTable">
                                <thead style="background-color: #5c3d2e; color: white;">
                                    <tr>
                                        <th>Title</th>
                                        <th>Subtitle</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr data-id="@Model.Id">
                                        <td>@Model.Title</td>
                                        <td>@Model.Subtitle</td>
                                        <td>
                                            <div class="d-flex justify-content-center gap-2">
                                                @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                                                {
                                                    <a asp-action="Detail" asp-route-id="@Model.Id" class="btn btn-info btn-sm" title="View">
                                                        <i class="fa-solid fa-circle-info"></i>
                                                    </a>
                                                }

                                                @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                                                {
                                                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-dark btn-sm" title="Edit">
                                                        <i class="fa-solid fa-pencil"></i>
                                                    </a>
                                                }
                                                @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin"))
                                                {

                                                    <button type="button" class="btn btn-danger btn-sm" id="deleteBtn" data-id="@Model.Id" title="Delete">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </button>
                                                }
                                               
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning text-center mt-4" role="alert" id="noServiceAlert" style="display:block;">
                            No service has been added yet.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const deleteBtn = document.getElementById("deleteBtn");
        if (!deleteBtn) return;

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        const serviceRow = deleteBtn.closest("tr");
        const noServiceAlert = document.getElementById("noServiceAlert");
        const addNewServiceLink = document.getElementById("addNewServiceLink");

        deleteBtn.addEventListener("click", function () {
            const id = this.getAttribute("data-id");

            Swal.fire({
                title: "Are you sure?",
                text: "This service will be permanently deleted!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/Admin/Service/Delete/${id}`, {
                            method: "POST",
                            headers: {
                                'RequestVerificationToken': token,
                                'X-Requested-With': 'XMLHttpRequest',
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ id: id })
                        });

                        if (response.ok) {
                            serviceRow.remove();
                            Swal.fire("Deleted!", "The service has been deleted.", "success");

                            noServiceAlert.style.display = "block";
                            addNewServiceLink.style.display = "inline-block";
                        } else if (response.status === 404) {
                            Swal.fire("Error!", "Service not found.", "error");
                        } else {
                            Swal.fire("Error!", "Failed to delete service.", "error");
                        }
                    } catch {
                        Swal.fire("Error!", "Unexpected error occurred.", "error");
                    }
                }
            });
        });
    });
</script>
