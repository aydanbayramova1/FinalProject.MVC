@model IEnumerable<OfferImageVM>

<form id="antiForgeryForm" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-xl-10">
            <div class="bg-light border rounded shadow-sm p-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2 class="mb-0" style="font-family: 'Georgia', serif; color: #6b4f3b;">☕ Offer Images</h2>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin")){
                        <a asp-action="Create" class="btn btn-outline-brown" id="addNewImageSetLink" style="@(Model.Any() ? "display:none;" : "display:inline-block;")">
                            <i class="fa fa-plus mr-1"></i> Add New Image Set
                        </a>
                    }
                 
                </div>

                @if (Model.Any())
                {
                    <div class="table-responsive" id="offerImagesTableWrapper">
                        <table class="table table-bordered text-center align-middle bg-white" id="offerImagesTable">
                            <thead class="thead-dark">
                                <tr>
                                    <th style="background-color: #5c3d2e; color: #fff;">Main Image</th>
                                    <th style="background-color: #5c3d2e; color: #fff;">Left Image</th>
                                    <th style="background-color: #5c3d2e; color: #fff;">Right Image</th>
                                    <th style="background-color: #5c3d2e; color: #fff;">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <img src="~/uploads/offerimages/@item.MainImageUrl" alt="Main Image" class="img-thumbnail" style="max-width: 120px; border-radius: 8px;" />
                                        </td>
                                        <td>
                                            <img src="~/uploads/offerimages/@item.LeftImageUrl" alt="Left Image" class="img-thumbnail" style="max-width: 120px; border-radius: 8px;" />
                                        </td>
                                        <td>
                                            <img src="~/uploads/offerimages/@item.RightImageUrl" alt="Right Image" class="img-thumbnail" style="max-width: 120px; border-radius: 8px;" />
                                        </td>
                                        <td>
                                            <div class="d-flex justify-content-center gap-2">
                                                @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                                                {
                                                    <a asp-action="Detail" class="btn btn-info btn-sm" title="View Details">
                                                        <i class="fa-solid fa-circle-info"></i>
                                                    </a>
                                                }

                                                @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                                                {
                                                    <a asp-action="Edit" class="btn btn-dark btn-sm" title="Edit">
                                                        <i class="fa-solid fa-pencil"></i>
                                                    </a>
                                                }
                                               
                                            
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="text-center mt-3">
                            @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin"))
                            {
                                <button id="deleteAllBtn" class="btn btn-danger">
                                    <i class="fas fa-trash-alt"></i> Delete All
                                </button>
                            }

                          
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning text-center mt-4" role="alert" id="noImagesAlert" style="display:block;">
                        No offer images have been added yet.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const deleteAllBtn = document.getElementById("deleteAllBtn");
        if (!deleteAllBtn) return;

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        const offerImagesTableWrapper = document.getElementById("offerImagesTableWrapper");
        const noImagesAlert = document.getElementById("noImagesAlert");
        const addNewImageSetLink = document.getElementById("addNewImageSetLink");

        deleteAllBtn.addEventListener("click", function () {
            Swal.fire({
                title: "Are you sure?",
                text: "All offer images will be permanently deleted!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete all!"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/Admin/OfferImages/Delete`, {
                            method: "POST",
                            headers: {
                                'RequestVerificationToken': token,
                                'X-Requested-With': 'XMLHttpRequest',
                                'Content-Type': 'application/json'
                            }
                        });

                        if (response.ok) {
                            offerImagesTableWrapper.style.display = "none";
                            noImagesAlert.style.display = "block";
                            addNewImageSetLink.style.display = "inline-block";

                            Swal.fire("Deleted!", "All offer images have been deleted.", "success");
                        } else {
                            Swal.fire("Error!", "Failed to delete offer images.", "error");
                        }
                    } catch (error) {
                        Swal.fire("Error!", "Unexpected error occurred.", "error");
                    }
                }
            });
        });
    });
</script>
