<!-- Views/Admin/ContactMessage/Index.cshtml - Yenilənmiş versiya -->
@model IEnumerable<ContactMessageVM>

<form id="antiForgeryForm" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<div class="container py-4">
    <h2 class="mb-4" style="color: #6b4f3b;">📥 Incoming Messages</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <table class="table table-bordered table-hover text-center bg-white" id="messagesTable">
        <thead class="table-dark">
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Message</th>
                <th>Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr data-id="@item.Id" class="@(item.IsReplied ? "table-success" : "")">
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Email</td>
                    <td>@item.Phone</td>
                    <td>
                        <div class="message-text" style="max-width: 200px; overflow: hidden; text-overflow: ellipsis;">
                            @item.Message
                        </div>
                        @if (!string.IsNullOrEmpty(item.Reply))
                        {
                            <div class="reply-text mt-2 p-2 bg-light border-start border-primary border-3">
                                <small class="text-muted">Reply:</small><br>
                                <small>@item.Reply</small>
                            </div>
                        }
                    </td>
                    <td>@item.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                    <td>
                        @if (item.IsReplied)
                        {
                            <span class="badge bg-success">Replied</span>
                            <br><small class="text-muted">@item.ReplyDate?.ToString("dd.MM.yyyy HH:mm")</small>
                        }
                        else
                        {
                            <span class="badge bg-warning">Pending</span>
                        }
                    </td>
                    <td>
                        @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("SuperAdmin")))
                        {
                            <a href="@Url.Action("Reply", new { id = item.Id })" class="btn btn-primary btn-sm mb-1">
                                @(item.IsReplied ? "Edit Reply" : "Reply")
                            </a>
                        }
                        @if (User.Identity.IsAuthenticated && User.IsInRole("SuperAdmin"))
                        {
                            <button type="button" class="btn btn-danger btn-sm delete-btn" data-id="@item.Id">Delete</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div id="noMessagesAlert" class="alert alert-warning text-center mt-4" role="alert" style="display:@(Model.Any() ? "none" : "block")">
        No incoming messages.
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const deleteButtons = document.querySelectorAll(".delete-btn");
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        const noMessagesAlert = document.getElementById("noMessagesAlert");
        const messagesTableBody = document.querySelector("#messagesTable tbody");

        deleteButtons.forEach(btn => {
            btn.addEventListener("click", function () {
                const id = this.getAttribute("data-id");
                const row = this.closest("tr");

                Swal.fire({
                    title: "Are you sure?",
                    text: "This message will be permanently deleted!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/Admin/ContactMessage/Delete/${id}`, {
                            method: "POST",
                            headers: {
                                'RequestVerificationToken': token,
                                'X-Requested-With': 'XMLHttpRequest',
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ id: id })
                        })
                        .then(response => {
                            if (response.ok) {
                                row.remove();
                                Swal.fire("Deleted!", "The message has been deleted.", "success");

                                if (messagesTableBody.children.length === 0) {
                                    noMessagesAlert.style.display = "block";
                                }
                            } else {
                                Swal.fire("Error!", "Something went wrong.", "error");
                            }
                        })
                        .catch(() => {
                            Swal.fire("Error!", "Unexpected error occurred.", "error");
                        });
                    }
                });
            });
        });
    });
</script>
